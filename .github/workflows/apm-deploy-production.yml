name: APM Deploy to Production

on:
  workflow_dispatch:
    branches: [main]

env:
  TF_VERSION: 0.15.4
  TG_VERSION: 0.37.1

jobs:
  buildLambda:
    name: Build Lambda
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
        working-directory: ./event-stream-processing
      - run: npm run pack
        working-directory: ./event-stream-processing
      - uses: actions/upload-artifact@v3
        with:
          name: event-stream-processing
          path: event-stream-processing/event-stream-processing.zip
          retention-days: 1
  buildWorkflow:
    name: Build Workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
        working-directory: ./workflow-cli
      - run: npm run pack
        working-directory: ./workflow-cli
      - uses: actions/upload-artifact@v3
        with:
          name: workflow-cli
          path: workflow-cli/workflow-cli.zip
          retention-days: 1
  plan:
    name: Terragrunt Plan
    needs: [buildLambda]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      # Install/Setup terraform CLI
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}
      # Install/Setup terragrunt CLI
      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}
      - uses: actions/download-artifact@v3
        with:
          name: event-stream-processing
          path: terraform/event-stream-processing.zip
      - name: Files0
        working-directory: ./terraform
        run: ls
      - name: Unzip ESP
        working-directory: ./terraform
        run: ls && unzip event-stream-processing.zip
      - name: Files1
        working-directory: ./terraform
        run: pwd
      - name: Files2
        working-directory: ./terraform
        run: ls
      - name: Run
        working-directory: terragrunt/prod
        env:
          app_image: ${{ env.IMAGE_ID }}:${{ github.event.workflow_run.head_branch}}
        run: terragrunt run-all plan --terragrunt-non-interactive
  apply:
    name: Terragrunt Apply
    needs: [plan, buildWorkflow]
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      # Install/Setup terraform CLI
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}
      # Install/Setup terragrunt CLI
      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}
      - uses: actions/download-artifact@v3
        with:
          name: event-stream-processing
          path: event-stream-processing.zip
      - uses: actions/download-artifact@v3
        with:
          name: workflow-cli
          path: terraform/workflow-cli.zip
      - name: Unzip Cli
        working-directory: terraform
        run: unzip workflow-cli.zip
      - name: Run
        working-directory: terragrunt/prod
        env:
          app_image: ${{ env.IMAGE_ID }}:${{ github.event.workflow_run.head_branch}}
        run: terragrunt run-all plan --terragrunt-non-interactive


      # - run: npm ci
      #   working-directory: ./workflow-cli
      # - name: Download/Install Maxmind databases
      #   run: ./bin/dev lambda-asset-download
      #   working-directory: ./workflow-cli
      #   env:
      #     MAXMIND_LICENSE_KEY: ${{secrets.MAXMIND_LICENSE_KEY}}
